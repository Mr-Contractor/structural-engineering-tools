import numpy as np
import pandas as pd
import seaborn as sns
import math
import sympy
import pint

# Create a unit registry
ureg = pint.UnitRegistry()

def force_from_moment(couple_force, moment_arm, distribution_arm):
    """
    Calculates the force required to counteract a given moment, considering a couple force and distribution arm.

    Args:
        couple_force (pint.Quantity): The magnitude of the couple force with units (e.g., 100 * ureg.newton).
        moment_arm (pint.Quantity): The distance between the couple forces with units of inch
        distribution_arm (pint.Quantity): The distance from the point of interest to the line of action of the calculated force, with units of inch

    Returns:
        pint.Quantity: The calculated force required to counteract the moment, with units of kip
    """

    # Ensure consistent units for all inputs
    couple_force = couple_force.to('kip')
    moment_arm = moment_arm.to('inch')
    distribution_arm = distribution_arm.to('inch')

    # Calculate the force required to counteract the moment at the given distribution arm
    force = (couple_force * distribution_arm) / moment_arm

    return force


def moment_from_force(force, moment_arm, distribution_arm):
    """
    Calculates the couple force required to generate a given moment, 
    considering a force acting at a specific distribution arm.

    Args:
        force (pint.Quantity): The magnitude of the force with units (e.g., 50 * ureg.kip).
        moment_arm (pint.Quantity): The distance between the couple forces with units of inch.
        distribution_arm (pint.Quantity): The distance from the point where the force is applied 
                                          to the point where the moment is being calculated, with units of inch.

    Returns:
        pint.Quantity: The calculated couple force required to generate the moment, with units of kip
    """

    # Ensure consistent units for all inputs
    force = force.to('kip')
    moment_arm = moment_arm.to('inch')
    distribution_arm = distribution_arm.to('inch')

    # Calculate the moment generated by the force at the given distribution arm
    moment = force * moment_arm

    # Calculate the couple force required to produce the same moment at the given moment arm
    couple_force = moment / distribution_arm

    return couple_force